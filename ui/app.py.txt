```python
import torch
import gradio as gr
import pandas as pd
from main import EEGNet

X = pd.read_csv("clustered_data_kmeans.csv").drop("label", axis=1)
model = EEGNet(X.shape[1], 3)
model.load_state_dict(torch.load("eegnet_emotion_recognition_kmeans.pth"))
model.eval()

def predict(*features):
    x = torch.tensor([features], dtype=torch.float32)
    with torch.no_grad():
        out = model(x)
    return f"Predicted Emotion Cluster: {torch.argmax(out).item()}"

inputs = [gr.Number(label=f"Feat{i+1}") for i in range(X.shape[1])]
gr.Interface(fn=predict, inputs=inputs, outputs="text").launch()
```
